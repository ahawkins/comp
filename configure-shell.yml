---
- hosts: localhost
  connection: local
  vars:
    - s_aliases:
      - name: ah
        dest: ahawkins
      - name: ss
        dest: saltside
      - name: sd
        dest: slashdeploy
  tasks:
    - name: Create configuration directory
      file:
        state: directory
        path: ~/.config/comp

    - name: Generate environment file
      template:
        src: files/env
        dest: ~/.config/comp/env.fish

    - name: Create env.d directory
      file:
        state: directory
        dest: ~/.config/comp/env.d

    - name: Create source code directory
      file:
        state: directory
        path: "{{ s_src_dir }}"

    - name: Accept github key
      known_hosts:
        state: present
        name: github.com
        key: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"

      # Ansible uses "localhost" for the inventory_hostname variable
      # becuase that's what is passed in playbook hosts.
    - name: Get machine's identified hostname
      command: hostname
      changed_when: false
      register: hostname

    - name: Clone dotfiles
      git:
        repo: https://github.com/ahawkins/dotfiles.git
        dest: "{{ dotfiles_dir }}"
        update: false

    - name: Configure dotfiles to push over SSH
      command: git remote set-url --push origin git@github.com:ahawkins/dotfiles.git
      args:
        chdir: "{{ dotfiles_dir }}"
      changed_when: False

    - name: Install dotfiles
      command: "./bootstrap.sh"
      args:
        chdir: "{{ dotfiles_dir }}"
      changed_when: false

    - name: Clone bindir
      git:
        repo: https://github.com/ahawkins/bindir.git
        dest: "{{ bindir_dir }}"
        update: false

    - name: Configure bindir to push over SSH
      command: git remote set-url --push origin git@github.com:ahawkins/bindir.git
      args:
        chdir: "{{ bindir_dir }}"
      changed_when: False

    - name: Clone life
      git:
        repo: git@gitlab.com:ahawkins/life.git
        dest: "{{ life_dir }}"
        update: false

    - name: Create s config dir
      file:
        state: directory
        dest: ~/.config/s/aliases

    - name: Create s aliases
      copy:
        dest: "~/.config/s/aliases/{{ item.name }}"
        content: "{{ item.dest }}"
      with_items: "{{ s_aliases }}"

    - name: Configure todo.sh
      template:
        src: files/todo/config
        dest: "~/.todo/config"

    - name: Create go directories
      file:
        state: directory
        path: "{{ item }}"
      with_items:
        - "{{ gopath }}"
        - "{{ gopath }}/bin"
