---
- name: Install packages
  community.general.homebrew:
    state: present
    name: "{{ packages }}"
  environment:
    HOMEBREW_GITHUB_API_TOKEN: "{{ homebrew_api_token }}"

- name: Install casks
  community.general.homebrew_cask:
    state: present
    name: "{{ casks }}"
    sudo_password: "{{ ansible_become_password | default(omit) }}"
  environment:
    HOMEBREW_GITHUB_API_TOKEN: "{{ homebrew_api_token }}"

- name: Create fish vendor_functions.d
  ansible.builtin.file:
    state: directory
    dest: "{{ brew_prefix }}/share/fish/vendor_functions.d"

- name: Install fundle
  ansible.builtin.get_url:
    url: https://git.io/fundle
    dest: "{{ brew_prefix }}/share/fish/vendor_functions.d/fundle.fish"

- name: Add fish to /etc/shells
  become: true
  ansible.builtin.lineinfile:
    path: /etc/shells
    regexp: fish
    line: "{{ brew_prefix }}/bin/fish"
    state: present

- name: Create configuration directory
  ansible.builtin.file:
    state: directory
    path: ~/.config/env/comp

- name: Configure environment variables
  ansible.builtin.template:
    src: "{{ item }}"
    dest: ~/.config/env/comp/{{ item | basename }}
  loop: "{{ query('fileglob', 'files/env/*') }}"

- name: Create source code directory
  ansible.builtin.file:
    state: directory
    path: "{{ s_src_dir }}"

- name: Create ~/.ssh
  ansible.builtin.file:
    state: directory
    path: ~/.ssh

- name: Accept github key
  ansible.builtin.known_hosts:
    state: present
    name: github.com
    key: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"

- name: Clone repos
  ansible.builtin.git:
    # Clone if not already existing
    clone: true
    # Do not blow away any existing changes
    force: false
    # Equivalent to a git fetch
    update: false
    repo: https://github.com/ahawkins/{{ item }}.git
    dest: "{{ s_src_dir }}/ahawkins/{{ item }}"
    version: master
  loop: "{{ repos }}"

- name: Configure repos to push over SSH
  ansible.builtin.command: |
    git remote set-url --push origin git@github.com:ahawkins/{{ item }}.git
  args:
    chdir: "{{ s_src_dir }}/ahawkins/{{ item }}"
  loop: "{{ repos }}"
  changed_when: false
