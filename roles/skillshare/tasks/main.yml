---
- name: Install casks
  community.general.homebrew_cask:
    state: present
    name: "{{ casks }}"
    sudo_password: "{{ ansible_become_password | default(omit) }}"
  environment:
    HOMEBREW_GITHUB_API_TOKEN: "{{ homebrew_api_token }}"

- name: Create comp configuration directory
  ansible.builtin.file:
    state: directory
    path: ~/.config/comp

- name: Copy comp configuration files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: ~/.config/comp/{{ item | basename }}
  loop: "{{ query('fileglob', 'files/comp/*') }}"

- name: Copy comp env.d files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ comp_envd_dir }}/{{ item | basename }}"
  loop: "{{ query('fileglob', 'files/env.d/*') }}"

- name: Create Skillshare config directory
  ansible.builtin.file:
    state: directory
    path: ~/.config/skillshare

- name: Copy Skillshare config files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: ~/.config/skillshare/{{ item | basename }}
  loop: "{{ query('fileglob', 'files/config/*') }}"

- name: Configure environment variables
  ansible.builtin.copy:
    content: "{{ item.value }}\n"
    dest: "{{ comp_ev_dir}}/{{ item.key }}"
  loop: "{{ env | dict2items }}"
  when: env is defined
  loop_control:
    label: "{{ item.key }}"

- name: Create ev files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ comp_ev_dir }}/{{ item | basename }}"
  loop: "{{ query('fileglob', 'files/env/*') }}"
  loop_control:
    label: "{{ item | basename }}"

- name: Create ~/.npmrc
  ansible.builtin.copy:
    src: files/npmrc
    dest: ~/.npmrc

- name: Remove dead environment variables
  ansible.builtin.file:
    state: absent
    dest: "{{ comp_ev_dir }}/{{ item }}"
  loop:
    - AWS_DEFAULT_PROFILE
    - AWS_PROFILE
    - KOP_STATE_STORE
    - SKILLSHARE_AWS_ADMIN_ACCOUNT_ID
    - SKILLSHARE_AWS_PROD_ACCOUNT_ID
    - SKILLSHARE_AWS_UTILITY_ACCOUNT_ID
    - SKILLSHARE_DATA_SCIENCE_CLUSTER
    - SKILLSHARE_PROD_CLUSTER
    - SKILLSHARE_QA_CLUSTER
    - SKILLSHARE_SANDBOX_CLUSTER
    - SKILLSHARE_STAGING_CLUSTER
    - SKILLSHARE_UTILITY_CLUSTER
    - SKILLSHARE_GITHUB_ACCESS_TOKEN

- name: Create source directory
  ansible.builtin.file:
    state: directory
    path: "{{ s_src_dir }}/skillshare"

- name: Clone my utils
  ansible.builtin.git:
    # Clone if not already existing
    clone: true
    # Do not blow away any existing changes
    force: false
    # Equivalent to a git fetch
    update: false
    dest: "{{ s_src_dir }}/skillshare/ahawkins"
    repo: "https://ahawkins:{{ github_token }}@github.com/Skillshare/ahawkins"

- name: Configure utils to use SSH
  ansible.builtin.command: |
    git remote set-url origin git@github.com:Skillshare/ahawkins.git
  args:
    chdir: "{{ s_src_dir }}/skillshare/ahawkins"
  changed_when: false

- name: Create Skillshare env directory
  ansible.builtin.file:
    state: directory
    path: "{{ skillshare_ev_dir }}"

