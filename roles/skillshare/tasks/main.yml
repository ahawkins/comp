---
- name: Install casks
  homebrew_cask:
    state: present
    name: "{{ item }}"
  environment:
    HOMEBREW_GITHUB_API_TOKEN: "{{ homebrew_api_token }}"
  with_items: "{{ casks }}"

- name: Install apps
  mas_app:
    state: present
    name: "{{ item }}"
  with_items: "{{ apps }}"

- name: Create comp configuration
  file:
    state: directory
    path: ~/.config/comp

- name: Copy comp files
  template:
    src: "{{ item }}"
    dest: ~/.config/comp/{{ item | basename }}
  with_fileglob:
    - files/comp/*

- name: Creat config directory
  file:
    state: directory
    path: ~/.config/skillshare

- name: Copy config files
  template:
    src: "{{ item }}"
    dest: ~/.config/skillshare/{{ item | basename }}
  with_fileglob:
    - files/config/*

- name: Configure environment variables
  template:
    src: "{{ item }}"
    dest: ~/.config/env/comp/{{ item | basename }}
  with_fileglob:
    - files/env/*

- name: Configure source AWS access key
  command: aws --profile skillshare-admin configure set aws_access_key_id '{{ aws_access_key_id }}'
  changed_when: false

- name: Configure source AWS secret access key
  command: aws --profile skillshare-admin configure set aws_secret_access_key '{{ aws_secret_access_key }}'
  changed_when: false

- name: Configure AWS profile
  blockinfile:
    state: present
    path: ~/.aws/config
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
    block: "{{ lookup('template', 'templates/aws_profile.ini.j2') }}"
  loop: "{{ aws_profiles}}"

- command: kubectl config get-contexts -o name
  register: configured_kubectl_contexts
  changed_when: false

- name: Configure Kops contexts
  command: kops export kubecfg '{{ item.cluster }}'
  loop: "{{ kops_contexts }}"
  changed_when: false

- name: Rename kops contexts
  command: kubectl config rename-context '{{ item.cluster }}' '{{ item.name }}'
  when: configured_kubectl_contexts.stdout.find(item.name) == -1
  loop: "{{ kops_contexts }}"
  changed_when: false

- name: Configure EKS contexts
  command: aws --profile '{{ item.name }}' eks update-kubeconfig --name '{{ item.cluster }}' --alias '{{ item.name }}'
  loop: "{{ eks_contexts }}"
  changed_when: false

- name: Configure context namespaces
  command: kubectl config set-context '{{ item.name }}' --namespace '{{ item.namespace }}'
  loop: "{{ eks_contexts + kops_contexts }}"
  changed_when: false

  # XXX: https://github.com/aws/aws-cli/issues/4337
- name: Patch AWS_PROFILE bug
  replace:
    path: ~/.kube/config
    regexp: AWS_PROFILE
    replace: AWS_DEFAULT_PROFILE

- name: Create source directory
  file:
    state: directory
    path: "{{ s_src_dir }}/skillshare"

- name: Configure .tool-versions
  copy:
    src: files/tool-versions
    dest: "{{ s_src_dir }}/skillshare/.tool-versions"
